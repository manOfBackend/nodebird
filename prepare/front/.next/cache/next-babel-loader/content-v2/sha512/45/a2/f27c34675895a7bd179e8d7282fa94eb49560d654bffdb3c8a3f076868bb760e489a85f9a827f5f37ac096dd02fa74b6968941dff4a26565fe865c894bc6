{"ast":null,"code":"import _defineProperty from \"C:/nodebird/prepare/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\nvar initialState = {\n  user: {},\n  post: {}\n};\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      case 'LOG_IN':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: _objectSpread(_objectSpread({}, state.user), {}, {\n            isLoggedIn: true,\n            user: action.data\n          })\n        });\n\n      case 'LOG_OUT':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: _objectSpread(_objectSpread({}, state.user), {}, {\n            isLoggedIn: false,\n            user: null\n          })\n        });\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","initialState","rootReducer","index","state","action","type","payload","isLoggedIn","data"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAIA,IAAMC,YAAY,GAAG;AAEjBF,EAAAA,IAAI,EAAE,EAFW;AAMjBC,EAAAA,IAAI,EAAE;AANW,CAArB;AAcA,IAAME,WAAW,GAAGJ,eAAe,CAAC;AAChCK,EAAAA,KAAK,EAAE,iBAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC3B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKT,OAAL;AACI,+CACOO,KADP,GAEOC,MAAM,CAACE,OAFd;;AAIJ,WAAK,QAAL;AACI,+CACOH,KADP;AAEIL,UAAAA,IAAI,kCACGK,KAAK,CAACL,IADT;AAEAS,YAAAA,UAAU,EAAE,IAFZ;AAGAT,YAAAA,IAAI,EAAEM,MAAM,CAACI;AAHb;AAFR;;AAQJ,WAAK,SAAL;AACI,+CACOL,KADP;AAEIL,UAAAA,IAAI,kCACGK,KAAK,CAACL,IADT;AAEAS,YAAAA,UAAU,EAAE,KAFZ;AAGAT,YAAAA,IAAI,EAAE;AAHN;AAFR;;AAQJ;AACI,eAAOK,KAAP;AAzBR;AA2BH,GA7B+B;AA8BhCL,EAAAA,IAAI,EAAJA,IA9BgC;AA+BhCC,EAAAA,IAAI,EAAJA;AA/BgC,CAAD,CAAnC;AAkCA,eAAeE,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n\r\n\r\nconst initialState = {\r\n\r\n    user: {\r\n\r\n    },\r\n\r\n    post: {\r\n\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    index: (state = {}, action) => {\r\n        switch (action.type) {\r\n            case HYDRATE:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                };\r\n            case 'LOG_IN':\r\n                return {\r\n                    ...state,\r\n                    user: {\r\n                        ...state.user,\r\n                        isLoggedIn: true,\r\n                        user: action.data,\r\n                    },\r\n                };\r\n            case 'LOG_OUT':\r\n                return {\r\n                    ...state,\r\n                    user: {\r\n                        ...state.user,\r\n                        isLoggedIn: false,\r\n                        user: null,\r\n                    },\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}